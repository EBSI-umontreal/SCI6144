# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile for CollectiveAcess, version 1.7.8
# URL : 127.0.0.1/sp
# URL for initial setup : 127.0.0.1
# Administrator email : demo@localhost
# Info for setup
# Database URL or IP : localhost
# Database name : providencedb
# Database user : providence_user
# Database password : providence_password

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.box = "bento/ubuntu-20.04"

  # Disable synced folder.
  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.vm.provider "virtualbox" do |v|
    v.name = "SCI6144-CollectiveAccess"
  end

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
  config.vm.network "forwarded_port", guest: 80, host: 80, host_ip: "127.0.0.1", id: "http"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
 
  #   # Customize the amount of memory on the VM:
    vb.memory = "4096"
  end

  config.vm.provision "shell", inline: <<-SHELL

    apt-get update

    apt-get install -y wireshark --yes
    
    apt-get install -y apache2 dcraw ffmpeg forensics-extra ghostscript imagemagick libapache2-mod-php mediainfo mysql-server mysql-client pdfminer-data php7.4-common php7.4-curl php7.4-gettext php7.4-json php7.4-mbstring php7.4-gd php7.4-mysql php7.4-simplexml php7.4-zip poppler-utils

    # Attention Wireshark (dumpcap) ne s'installe pas tout seul.

    apt-get install -y libreoffice --no-install-recommends  --no-install-suggests
 
    # ParamÃ¨tres de php.ini, voir : https://docs.collectiveaccess.org/wiki/Installing_Providence
    sed -i '409s/128/256/' /etc/php/7.4/apache2/php.ini #memory_limit = 128M -> memory_limit = 256M
    sed -i '846s/8/32/' /etc/php/7.4/apache2/php.ini #upload_max_filesize = 8M -> upload_max_filesize = 32M
    sed -i '694s/2/32/' /etc/php/7.4/apache2/php.ini #post_max_size = 2M -> post_max_size = 32M

    # Other dependencies
    wget https://github.com/libgd/libgd/releases/download/gd-2.2.5/libgd-2.2.5.tar.gz
    tar -zxvf libgd-2.2.5.tar.gz

    # Download collectiveaccess/providence, see : https://docs.collectiveaccess.org/wiki/Installing_Providence
     wget https://github.com/collectiveaccess/providence/archive/1.7.8.tar.gz
     tar -zxvf 1.7.8.tar.gz
     rm /var/www/html/index.html
     mv providence-1.7.8/* /var/www/html/
     mv /var/www/html/setup.php-dist /var/www/html/setup.php
     rm 1.7.8.tar.gz

     sed -i '38s/my_database_user/providence_user/' /var/www/html/setup.php
     sed -i '44s/my_database_password/providence_password/' /var/www/html/setup.php
     sed -i '50s/name_of_my_database/providencedb/' /var/www/html/setup.php

     # Download collectiveaccess/pawtucket2
     wget https://github.com/collectiveaccess/pawtucket2/archive/1.7.8.tar.gz
     tar -zxvf 1.7.8.tar.gz
     mkdir /var/www/html/pawtucket2/
     mv pawtucket2-1.7.8/* /var/www/html/pawtucket2/
     mv /var/www/html/pawtucket2/setup.php-dist /var/www/html/pawtucket2/setup.php
     sed -i '39s/my_database_user/providence_user/' /var/www/html/pawtucket2/setup.php
     sed -i '45s/my_database_password/providence_password/' /var/www/html/pawtucket2/setup.php
     sed -i '51s/name_of_my_database/providencedb/' /var/www/html/pawtucket2/setup.php

     ln -s /var/www/html/pawtucket2/media /var/www/html/

     chown www-data:www-data -R /var/www/html/
     chmod 775 -R /var/www/html/
    
    # Create database
    # This is not a secure database
    mysql -uroot -e "CREATE DATABASE providencedb"
    mysql -uroot -e "CREATE USER 'providence_user'@'localhost' IDENTIFIED BY 'providence_password'"
    mysql -uroot -e "GRANT ALL PRIVILEGES ON providencedb.* TO 'providence_user'@'localhost' WITH GRANT OPTION"

  SHELL
end