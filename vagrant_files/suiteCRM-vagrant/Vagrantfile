# -*- mode: ruby -*-
# vi: set ft=ruby :

# VM for SuiteCRM, version 7.11.15.
# Official user documentation : https://docs.suitecrm.com/user/
# Official Core Modules documentation : https://docs.suitecrm.com/user/core-modules/
# URL : http://127.0.0.1
# Install URL : http://127.0.0.1
# Admin user : admin
# Admin password : SCI6144-A20

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "bento/ubuntu-20.04"

  # Disable synced folder.
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # Add sources folder
  config.vm.provision "file", source: "C:/vm/suiteCRM/sources/", destination: "/tmp/"
  
  config.vm.provider "virtualbox" do |v|
    v.name = "SCI6144-suiteCRM"
  end

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  #config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1", id: "apache2"
  config.vm.network "forwarded_port", guest: 80, host: 80, host_ip: "127.0.0.1", id: "apache2"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
vb.memory = "4096"
end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL

  # Install dependencies, see : https://docs.suitecrm.com/admin/installation-guide/downloading-installing/#_recommended_installation_pre_requisites
  apt-get update
  apt-get install -y apache2 libapache2-mod-php mysql-server mysql-client php7.4-curl php7.4-gd php7.4-imap php7.4-json php7.4-mbstring php7.4-gd php7.4-mysql php7.4-xml php7.4-zip unzip

  sed -i '846s/2/32/' /etc/php/7.4/apache2/php.ini
  service apache2 restart

  # Copy and extract
  # Link for download : 
  rm /var/www/html/index.html

  wget https://suitecrm.com/files/162/SuiteCRM-7.11/513/SuiteCRM-7.11.15.zip
  unzip SuiteCRM-7.11.15.zip
  mv SuiteCRM-7.11.15/* /var/www/html/
  
  # Set permissions, see : https://docs.suitecrm.com/admin/installation-guide/downloading-installing/#_copying_suitecrm_files_to_web_server
  cd /var/www/html/
  chown -R www-data:www-data .
  chmod -R 755 .
  chmod -R 775 cache custom modules themes data upload
  chmod 775 config_override.php 2>/dev/null
 
  # Create database
  # This is not secure
  mysql -uroot -e "CREATE DATABASE suitecrm DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci"
  mysql -uroot -e "CREATE USER 'suitecrm'@'localhost' IDENTIFIED BY 'suitecrm'"
  mysql -uroot -e "GRANT ALL PRIVILEGES ON suitecrm.* TO 'suitecrm'@'localhost' WITH GRANT OPTION"
  
  SHELL
end