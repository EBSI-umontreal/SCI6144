# -*- mode: ruby -*-
# vi: set ft=ruby :

# Documentation to install Koha
# URL : https://wiki.koha-community.org/wiki/Koha_on_ubuntu_-_packages
# Don't forget to install build-essential.
# URL http://127.0.0.1:8080
# username : koha_library
# password : cOHp89uhgK3Gj87@ # This password is unique to a build.

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "bento/ubuntu-20.04"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false
  config.vm.provider "virtualbox" do |v|
    v.name = "SCI6144-Koha"
  end

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
  
  # OPAC, see https://wiki.koha-community.org/wiki/Koha_on_ubuntu_-_packages
  config.vm.network "forwarded_port", guest: 80, host: 80, host_ip: "127.0.0.1", id: "OPAC"
  
  # Intranet, see https://wiki.koha-community.org/wiki/Koha_on_ubuntu_-_packages
  config.vm.network "forwarded_port", guest: 8080, host: 8080, host_ip: "127.0.0.1", id: "Intranet"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
     vb.memory = "4096"
   end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL

  # Install all dependencies before installing koha
  apt-get update
  #apt-get install -y apache2 build-essential libapache2-mod-php memcached mysql-server mysql-client perl php7.4-curl php7.4-gettext php7.4-json php7.4-mbstring php7.4-gd php7.4-mysql php7.4-simplexml

  # Add a Koha Community Repository, see : https://wiki.koha-community.org/wiki/Koha_on_ubuntu_-_packages
  echo deb http://debian.koha-community.org/koha stable main | tee /etc/apt/sources.list.d/koha.list
  wget -O- https://debian.koha-community.org/koha/gpg.asc | apt-key add -

  # Install koha, see : https://wiki.koha-community.org/wiki/Koha_on_ubuntu_-_packages
  apt-get update
  apt-get upgrade -y
  apt-get install -y koha-common

  # Apache ports, see : https://wiki.koha-community.org/wiki/Koha_on_ubuntu_-_packages
  # Listen 80
  # listen 8080
  sed -i '5 a listen 8080' /etc/apache2/ports.conf

  # Apache modules, see : https://wiki.koha-community.org/wiki/Koha_on_ubuntu_-_packages
  a2enmod rewrite
  a2enmod cgi
  service apache2 restart

  # Create library, see : https://wiki.koha-community.org/wiki/Koha_on_ubuntu_-_packages
  koha-create --create-db library

  # Pre-Web Install Setup, see : https://wiki.koha-community.org/wiki/Koha_on_ubuntu_-_packages
  # Edit /etc/koha/koha-sites.conf
  sed -i '8 s/DOMAIN=".myDNSname.org"/DOMAIN=""/g' /etc/koha/koha-sites.conf
  sed -i '9 s/INTRAPORT="80"/INTRAPORT="8080"/g' /etc/koha/koha-sites.conf
  sed -i '34 s/ZEBRA_LANGUAGE="en"/ZEBRA_LANGUAGE="fr"/g' /etc/koha/koha-sites.conf

  # Building Languages, see : https://wiki.koha-community.org/wiki/Koha_on_ubuntu_-_packages
  # We want our koha in French
  koha-translate --install fr-FR

  # Show the password
  # xmlstarlet sel -t -v 'yazgfs/config/pass' /etc/koha/sites/library/koha-conf.xml;echo

  SHELL
end
